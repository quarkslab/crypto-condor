syntax = "proto3";

package crypto_condor;

// A single test for ECDSA signature verification. It requires all three values (msg,
// sig. pubkey).
message EcdsaSigVerTest {
    // The test ID, unique in its set of vectors.
    int32 id = 1;
    // The type of test. One of: valid, invalid, acceptable.
    string type = 2;
    // A comment on the test.
    string comment = 3;
    // Flags that categorize this test.
    repeated string flags = 4;

    // The message that was signed.
    bytes msg = 5;
    // The signature ASN.1 encoded as Dss-Sig-Value from RFC 3279.
    bytes sig = 6;
    // The public key as an encoded uncompressed point.
    bytes pubkey = 7;
}

// Test vectors for ECDSA signature verification, grouped by elliptic curve and hash
// function.
message EcdsaSigVerVectors {
	// The source of the test vectors.
	string source = 1;
	// Description of the source.
	string source_desc = 2;
	// The URL of the source.
	string source_url = 3;
	// Whether these are compliance test vectors or not.
	bool compliance = 4;
	// A dictionary of test flags and their description.
    map<string, string> notes = 5;

    // The elliptic curve.
    string curve = 6;
    // The hash function.
    string hash = 7;
	// The test vectors.
	repeated EcdsaSigVerTest tests = 8;
}

// A single test for ECDSA signature generation. It requires both values (msg, d).
message EcdsaSigGenTest {
    // The test ID, unique in its set of vectors.
    int32 id = 1;
    // The type of test. One of: valid, invalid, acceptable.
    string type = 2;
    // A comment on the test.
    string comment = 3;
    // Flags that categorize this test.
    repeated string flags = 4;

    // The message to sign.
    bytes msg = 5;
    // The secret value as bytes.
    bytes d = 6;
}

// Test vectors for ECDSA signature generation, grouped by elliptic curve and hash
// function.
message EcdsaSigGenVectors {
	// The source of the test vectors.
	string source = 1;
	// Description of the source.
	string source_desc = 2;
	// The URL of the source.
	string source_url = 3;
	// Whether these are compliance test vectors or not.
	bool compliance = 4;
	// A dictionary of test flags and their description.
    map<string, string> notes = 5;

    // The elliptic curve.
    string curve = 6;
    // The hash function.
    string hash = 7;
	// The test vectors.
	repeated EcdsaSigGenTest tests = 8;
}

